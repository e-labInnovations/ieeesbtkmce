{"version":3,"file":"scripts/awards-post/index.js","mappings":"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","sources":["webpack://ieeesbtkmce/./src/scripts/awards-post/metabox.js","webpack://ieeesbtkmce/external window \"React\"","webpack://ieeesbtkmce/external window [\"wp\",\"components\"]","webpack://ieeesbtkmce/external window [\"wp\",\"data\"]","webpack://ieeesbtkmce/external window [\"wp\",\"editPost\"]","webpack://ieeesbtkmce/external window [\"wp\",\"plugins\"]","webpack://ieeesbtkmce/webpack/bootstrap","webpack://ieeesbtkmce/webpack/runtime/compat get default export","webpack://ieeesbtkmce/webpack/runtime/define property getters","webpack://ieeesbtkmce/webpack/runtime/hasOwnProperty shorthand","webpack://ieeesbtkmce/webpack/runtime/make namespace object","webpack://ieeesbtkmce/./src/scripts/awards-post/index.js"],"sourcesContent":["import { PluginDocumentSettingPanel } from \"@wordpress/edit-post\";\nimport {\n  PanelRow,\n  DatePicker,\n  TextControl,\n  SelectControl,\n} from \"@wordpress/components\";\nimport { useSelect, useDispatch } from \"@wordpress/data\";\n\nconst Metabox = () => {\n  const postType = useSelect((select) => {\n    return select(\"core/editor\").getCurrentPostType();\n  });\n\n  if (postType !== \"awards\") return null; // Will only render component for post type 'awards'\n\n  const { editPost } = useDispatch(\"core/editor\");\n\n  const meta = useSelect((select) =>\n    select(\"core/editor\").getEditedPostAttribute(\"meta\"),\n  );\n\n  const chapters = useSelect((select) => {\n    const query = {\n      status: \"publish\",\n      per_page: -1,\n    };\n\n    return select(\"core\").getEntityRecords(\"postType\", \"chapters\", query);\n  });\n\n  let options = [];\n  if (chapters) {\n    options.push({ value: -1, label: \"IEEE\" });\n    chapters.forEach((chapter) => {\n      options.push({\n        value: chapter.id,\n        label: chapter.slug.toUpperCase(),\n      });\n    });\n  } else {\n    options.push({ value: -1, label: \"Loading...\" });\n  }\n\n  return (\n    <PluginDocumentSettingPanel\n      title=\"Award Details\"\n      name=\"meta\"\n      initialOpen=\"true\"\n      icon={\n        <svg>\n          <use xlinkHref=\"/icons.svg#icon-award-star\" />\n        </svg>\n      }\n    >\n      <PanelRow>\n        <h3 className=\"text-lg\">Award Date / Year*</h3>\n      </PanelRow>\n      <PanelRow>\n        <DatePicker\n          currentDate={meta && meta.award_date ? meta.award_date : null}\n          onChange={(value) => editPost({ meta: { award_date: value } })}\n        />\n      </PanelRow>\n\n      <PanelRow>\n        <TextControl\n          label=\"Awarding Authority\"\n          value={meta && meta.awarding_authority ? meta.awarding_authority : \"\"}\n          onChange={(value) =>\n            editPost({ meta: { awarding_authority: value } })\n          }\n        />\n      </PanelRow>\n\n      <PanelRow>\n        <SelectControl\n          label=\"Recipient Chapter\"\n          value={meta && meta.award_recipient ? meta.award_recipient : \"-1\"}\n          options={options}\n          onChange={(value) => editPost({ meta: { award_recipient: value } })}\n        />\n      </PanelRow>\n    </PluginDocumentSettingPanel>\n  );\n};\n\nexport default Metabox;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from \"@wordpress/plugins\";\nimport Metabox from \"./metabox\";\n\nregisterPlugin(\"ieeesbtkmce-awards-plugin\", {\n  render() {\n    return <Metabox />;\n  },\n});\n"],"names":["PluginDocumentSettingPanel","PanelRow","DatePicker","TextControl","SelectControl","useSelect","useDispatch","Metabox","postType","select","getCurrentPostType","editPost","meta","getEditedPostAttribute","chapters","query","status","per_page","getEntityRecords","options","push","value","label","forEach","chapter","id","slug","toUpperCase","createElement","title","name","initialOpen","icon","xlinkHref","className","currentDate","award_date","onChange","awarding_authority","award_recipient","registerPlugin","render"],"sourceRoot":""}